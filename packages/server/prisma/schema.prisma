// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id     Int    @id @default(autoincrement())
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String @unique

  musics Music[]

  room Room?

  preferences Preference[]

  playlists Playlist[]
}

model Role {
  id    String @id @default(uuid(7))
  name  String
  users User[]
}

model Music {
  id         String  @id @default(uuid(7))
  name       String
  uploader   User    @relation(fields: [uploaderId], references: [id])
  uploaderId Int     @unique
  file       File    @relation(fields: [fileId], references: [id])
  fileId     String  @unique
  public     Boolean @default(false)

  playlists Playlist[] @relation("PlaylistOfMusic")
}

model Playlist {
  id      String  @id @default(uuid(7))
  name    String
  public  Boolean @default(false)
  owner   User    @relation(fields: [ownerId], references: [id])
  ownerId Int     @unique
  musics  Music[] @relation("PlaylistOfMusic")
  rooms   Room[]
}

model File {
  id     String  @id @default(uuid(7))
  intact Boolean @default(false)
  path   String
  music  Music?
}

model Room {
  id          String   @id @default(uuid(7))
  name        String
  description String
  active      Boolean  @default(true)
  public      Boolean  @default(true)
  owner       User     @relation(fields: [ownerId], references: [id])
  ownerId     Int      @unique
  playlist    Playlist @relation(fields: [playlistId], references: [id])
  playlistId  String   @unique
  lastActive  DateTime @default(now())
}

model Preference {
  id     String @id @default(uuid(7))
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
  key    String
  value  String
}
